import{r as s,o as i,c as l,b as e,d as n,F as r,e as a,f as c}from"./app.38fa1a20.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";const p={},h=e("h1",{id:"easy-prop-links",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#easy-prop-links","aria-hidden":"true"},"#"),a(" Easy Prop Links")],-1),u=e("p",null,"Easy Prop Links (EPL) automatically links properties on a Parent/Child base. Select and link multiple properties on multiple layers with the click of a button, the linking order doesn\u2019t matter.",-1),f=e("h2",{id:"controls",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#controls","aria-hidden":"true"},"#"),a(" Controls")],-1),k=e("thead",null,[e("tr",null,[e("th"),e("th"),e("th")])],-1),y=e("td",null,[e("code",null,"Set Parent")],-1),m=e("td",null,"Select and set the parent layer or properties",-1),g=e("td",null,[e("code",null,"Set Children")],-1),b=e("td",null,"Select and set the child layer or properties",-1),_=e("td",null,[e("code",null,"Link")],-1),v=e("td",null,"Link the child and parent properties",-1),L=e("td",null,[e("code",null,"Time Offset (frames)")],-1),w=e("td",null,"Set a time offset value",-1),x=e("td",null,[e("code",null,"Log")],-1),S=e("td",null,"Open log panel",-1),P=c(`<h3 id="mofidier-keys" tabindex="-1"><a class="header-anchor" href="#mofidier-keys" aria-hidden="true">#</a> Mofidier Keys</h3><p><code>CMD/CTRL+CLICK</code> the <code>Set Parent</code> or <code>Set Children</code> buttons to launch the <code>Link</code> process automatically.</p><h2 id="link-properties" tabindex="-1"><a class="header-anchor" href="#link-properties" aria-hidden="true">#</a> Link Properties</h2><h3 id="the-classical-way" tabindex="-1"><a class="header-anchor" href="#the-classical-way" aria-hidden="true">#</a> The classical way</h3><ol><li>select the parent properties, and click the <code>Set Parent</code> button</li><li>select the children properties, and click <code>Set Children</code> button</li><li>the selected properties are linked upon clicking the <code>Link</code> button</li></ol><h3 id="the-new-way" tabindex="-1"><a class="header-anchor" href="#the-new-way" aria-hidden="true">#</a> The new way</h3><ol><li>select the child properties on multiple child layers and click the <code>Set Children</code> button</li><li>select <strong>only the parent layer</strong> on which the parent properties reside and click the <code>Set Parent</code> button</li><li>click the <code>Link</code> button to parent</li></ol><p>Or</p><ol><li>select the parent properties and click the <code>Set Parent</code> button</li><li>select <strong>multiple child layers</strong> that share the same properties and click the <code>Set Children</code> button</li><li>click the <code>Link</code> button to parent</li></ol><div class="custom-container tip"><p class="custom-container-title">Note</p><p>Unlike <code>Copy with Property Links</code>, EPL works in a pass-through fashion. If a property or property group isn&#39;t found on a child layer (i.e. a Text Animator or Shape Group), EPL doesn\u2019t copy/paste missing properties but skips missing properties instead. Properties that turn out to be missing, will show up in EPL\u2019s <code>Log</code> panel.</p></div><h2 id="time-offset" tabindex="-1"><a class="header-anchor" href="#time-offset" aria-hidden="true">#</a> Time Offset</h2><p>Aside from making bulk parenting of properties easy, Easy Prop Links allows you to time offset parented properties by using the <code>.setValueAtTime()</code> expression. During the parenting process, EPL adds a <code>Slider Control</code> effect to each layer that controls either the time offset value (parent), or the index of the child layer.</p><p>The expression looks as follows:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>propertySpec<span class="token punctuation">.</span><span class="token function">setValueAtTime</span><span class="token punctuation">(</span>time <span class="token operator">+</span> <span class="token punctuation">[</span>parent time offset value<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">[</span>child index<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>The <code>EPL \u2013 time offset (frames)</code> effect applied to the parent layer, controls the time offset value of the child properties. Its value is set in frames, a positive value delays the children properties into the past, a negative value into the future.</p><p>The <code>EPL \u2013 layer index</code> effect applied to the children layer sets a layer index value for the expression, the index is used to compute a proprietary delay value for each layer.</p><p>Setting the time offset value to <code>0</code> disables the time offset, and removes any previously generated slider effects from the selected layers.</p><h2 id="user-interface" tabindex="-1"><a class="header-anchor" href="#user-interface" aria-hidden="true">#</a> User Interface</h2><h3 id="buttons-\u2013-secondary-function" tabindex="-1"><a class="header-anchor" href="#buttons-\u2013-secondary-function" aria-hidden="true">#</a> Buttons \u2013 secondary function</h3><p>Both <code>Set Children Prop</code> and <code>Set Parent</code> buttons can trigger the linking process upon setting the respective parent/child dependency automatically. To do this, hold the <code>CTRL/CMD</code> modifier key while clicking the button, the linking process will be executed upon setting the dependency.</p><h3 id="link-button" tabindex="-1"><a class="header-anchor" href="#link-button" aria-hidden="true">#</a> Link Button</h3><p>The Link button provides three feedback states upon linking properties:</p><ul><li><code>Green</code> \u2013 all properties have successfully been linked</li><li><code>Orange</code> \u2013 some properties have successfully been linked</li><li><code>Red</code> \u2013 no properties have been linked</li></ul><h3 id="log-panel" tabindex="-1"><a class="header-anchor" href="#log-panel" aria-hidden="true">#</a> Log panel</h3><p>The <code>Log</code> panel provides insights about the successful or failed linking attempts. In case a property couldn\u2019t be linked, its path will be listed inside the <code>Log</code> panel.</p><div class="custom-container tip"><p class="custom-container-title">Note</p><p>logging only works for linking processes that are being executed while the Log panel is open for the moment.</p></div>`,26);function C(o,T){const t=s("eplbutton");return i(),l(r,null,[h,u,f,e("table",null,[k,e("tbody",null,[e("tr",null,[e("td",null,[n(t,{src:o.$withBase("/icons/parent.svg"),alt:"Set Parent Button",width:"2",square:""},null,8,["src"])]),y,m]),e("tr",null,[e("td",null,[n(t,{src:o.$withBase("/icons/child.svg"),alt:"Set Children Button",width:"2",square:""},null,8,["src"])]),g,b]),e("tr",null,[e("td",null,[n(t,{src:o.$withBase("/icons/link.svg"),alt:"Link Button",width:"2",square:""},null,8,["src"])]),_,v]),e("tr",null,[e("td",null,[n(t,{input:"0",alt:"Link Button",width:"2",square:""})]),L,w]),e("tr",null,[e("td",null,[n(t,{src:o.$withBase("/icons/log.svg"),alt:"Log Button",width:"2",square:""},null,8,["src"])]),x,S])])]),P],64)}var N=d(p,[["render",C]]);export{N as default};
